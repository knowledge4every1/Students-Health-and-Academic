load('preprocessed_data.mat');
numVars = size(dataNorm, 2);

options = optimoptions('ga',...
    'PopulationSize', 100,...
    'MaxGenerations', 200,...
    'EliteCount', 15,...
    'CrossoverFraction', 0.85,...
    'FunctionTolerance', 1e-9,...
    'MutationFcn', @mutationadaptfeasible,...
    'CrossoverFcn', @crossoverheuristic,...
    'SelectionFcn', @selectionstochunif,...
    'HybridFcn', @patternsearch,...
    'Display', 'iter');

% Define bounds and constraint
lb = zeros(1, numVars);
ub = ones(1, numVars);
Aeq = ones(1, numVars);
beq = 1;

fitnessFcn = @(w) step2_fitness_function(w, dataNorm);
[optWeights, optFitness] = ga(fitnessFcn, numVars, [], [], Aeq, beq, lb, ub, [], options);

save('weights_from_ga.mat', 'optWeights', 'optFitness');
